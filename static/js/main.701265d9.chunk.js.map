{"version":3,"sources":["components/minigame/golf/img/driverIcon.svg","components/minigame/golf/img/ironIcon.svg","components/minigame/golf/img/putterIcon.svg","components/minigame/golf/img/fingerprint.svg","components/minigame/golf/img/sky.png","components/minigame/golf/img/golfbag.svg","components/common/Header.js","base.js","components/minigame/play/PhaseConnection.js","components/minigame/play/PhaseStarting.js","components/minigame/play/PhaseFinalResult.js","components/minigame/golf/GolfConstants.js","components/minigame/golf/GolfUtil.js","components/minigame/golf/GolfController.js","components/minigame/play/Minigame.js","components/pages/Play.js","components/common/CustomizedSnackbars.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","id","AppBar","position","Toolbar","className","Component","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","PhaseConnection","handleChange","name","event","setState","defineProperty","target","value","createPlayer","bind","assertThisInitialized","_this$props","playerKey","game","addPlayer","minigame","nameGenerator","generatePlayer","score","currentNames","players","values","map","adjectives","nouns","finalName","i","concat","Math","floor","random","length","indexOf","generateName","_this$props2","playerName","Typography","variant","FormControl","TextField","label","margin","onChange","Button","onClick","PhaseStarting","PhaseFinalResult","BALL_RADIUS_CONTROLLER","GRASS_COLOR","CLUBS","type","loft","powerFactor","max","ballMaterial","p2","groundMaterial","holeMaterial","friction","restitution","relaxation","pow","canvas","ctx","GolfController","handleClick","anchorEl","currentTarget","handleClose","handleChangeSelect","canvasHeight","window","innerHeight","canvasWidth","innerWidth","clubIcons","wood","driverIcon","iron","ironIcon","putt","putterIcon","highestAcceleration","isSwinging","swingData","clubIndex","round","strokes","renderFrame","saveSwing","testSwing","currentState","_this2","document","getElementById","getContext","translate","that","DeviceMotionEvent","requestPermission","then","permissionState","addEventListener","e","preventDefault","stopPropagation","_that$state","_event$acceleration","acceleration","x","y","z","push","xpower","abs","zpower","power","alert","catch","console","error","_that$state2","nextProps","nextState","_this$state","log","phase","currentPlayer","nextCurrentPlayer","test","util","swing","club","xFactor","YFactor","min","ceil","database","ref","key","set","_this$props3","showNameTag","_this$props4","_this$state2","classes","lineWidth","background","Image","src","skyImage","onload","clearRect","width","height","drawImage","fingerprint","globalAlpha","fingerprintIcon","len","prevSwing","newY","newX","beginPath","moveTo","lineTo","stroke","drawSwing","levelColor","fillStyle","fillRect","font","textAlign","fillText","drawStrokes","fill","playerState","strokeStyle","arc","PI","closePath","drawBall","color","distance","drawDistance","player","scoreTime","drawScoreText","_this3","_this$props5","_this$state3","choosenClub","Boolean","ClubSlider","withStyles","thumb","marginLeft","marginBottom","backgroundColor","active","track","rail","opacity","mark","marginTop","markActive","markLabel","fontWeight","markLabelActive","Slider","container","clubwrapper","aria-label","defaultValue","orientation","marks","c","step","onChangeCommitted","newValue","clubiconWrapper","clubicon","alt","footer","style","dist_default","minValue","startColor","ringWidth","segments","needleTransitionDuration","needleTransition","textColor","needleColor","endColor","currentValueText","maxValue","saveFindMyBall","size","top","left","theme","header","bottom","Minigame","lastPhase","play_PhaseConnection","play_PhaseStarting","golf_GolfController","play_PhaseFinalResult","PureComponent","fetchGame","gameId","callback","orderByChild","equalTo","once","Play","recentGameId","localStorage","getItem","recentGame","isRedirected","Date","now","joinGame","gamePinParam","location","href","split","snapshot","val","forEach","child","status","showSnackbar","toggleHeader","storedPlayerKey","initGameListiner","message","setItem","_game","gameRef","on","playerRef","newPlayer","assign","play_Minigame","List","ListItem","ListItemAvatar","Avatar","GolfCourse_default","ListItemText","primary","title","secondary","ListItemSecondaryAction","IconButton","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","green","palette","dark","amber","icon","fontSize","iconVariant","marginRight","spacing","unit","display","alignItems","onClose","other","objectWithoutProperties","Icon","SnackbarContent","aria-describedby","classNames","action","close","Close_default","CustomizedSnackbars","reason","hideSnackbar","snack","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","React","App","showHeader","hash","substring","reduce","initial","item","parts","decodeURIComponent","access_token","common_Header","pages_Play","common_CustomizedSnackbars","ReactDOM","render","src_App_0"],"mappings":"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","file":"static/js/main.701265d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/driverIcon.664410f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/ironIcon.aff82a3f.svg\";","module.exports = __webpack_public_path__ + \"static/media/putterIcon.017c75cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/fingerprint.deabfcc6.svg\";","module.exports = __webpack_public_path__ + \"static/media/sky.474fac6d.png\";","module.exports = __webpack_public_path__ + \"static/media/golfbag.c7fbd966.svg\";","import React, { Component } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const titleText = 'Golf';\r\n\r\n    return (\r\n      <div id=\"header\">\r\n        <AppBar position=\"static\">\r\n          <Toolbar className=\"toolbar\">\r\n            <div className=\"appbar-container--left\">\r\n              {titleText}\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nconst golfConfig = {\r\n  apiKey: 'AIzaSyA1LCnNtukZ_zxfJwCeaEgKTU-BNrprX24',\r\n  authDomain: 'stagehoot-golf.firebaseapp.com',\r\n  databaseURL: 'https://stagehoot-golf.firebaseio.com',\r\n  projectId: 'stagehoot-golf',\r\n  storageBucket: 'stagehoot-golf.appspot.com',\r\n  messagingSenderId: '688320597897',\r\n  appId: '1:688320597897:web:8279c87d63b8e6fa',\r\n};\r\n\r\n\r\nconst fire = firebase.initializeApp(golfConfig, 'golf');\r\n\r\nexport { fire };\r\n","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nfunction generateName(currentNames) {\r\n  const adjectives = ['rutig,', 'antik', 'arg', 'lugn', 'friterad', 'hemlig', 'lycklig', 'gammal', 'rutten', 'smidig', 'vegansk', 'stark', 'full', 'giftig', 'djurig', 'artig', 'smutsig', 'dum', 'smart', 'stilig', 'snabb', 'långsam', 'seg', 'blygsam', 'envis', 'cool', 'tuff', 'spännande', 'farlig'];\r\n  const nouns = ['ninja', 'stol', 'pankaka', 'staty', 'enhörning', 'regnbåge', 'kanin', 'kapten', 'cupcake', 'morot', 'potatis', 'salad', 'gardin', 'toalett', 'streckgubbe', 'drake', 'farmor', 'mormor', 'farfar', 'morfar', 'mellanchef', 'rörmokare', 'bilförsäljare', 'skogshuggare', 'pensionär', 'cirkus', 'studdsmatta', 'clown', 'mellanchef', 'busschafför', 'luftballong', 'boss', 'tiger'];\r\n  let finalName = '';\r\n  for (let i = 0; i < 20; i++) {\r\n    let name = '';\r\n    if (i > 10) {\r\n      name = `${adjectives[Math.floor(Math.random() * adjectives.length)]} ${adjectives[Math.floor(Math.random() * adjectives.length)]} ${nouns[Math.floor(Math.random() * nouns.length)]}`;\r\n    } else {\r\n      name = `${adjectives[Math.floor(Math.random() * adjectives.length)]} ${nouns[Math.floor(Math.random() * nouns.length)]}`;\r\n    }\r\n    if (currentNames.indexOf(name) > -1) {\r\n      continue;\r\n    } else {\r\n      finalName = name;\r\n      break;\r\n    }\r\n  }\r\n  return finalName;\r\n}\r\nclass PhaseConnection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n    };\r\n    this.createPlayer = this.createPlayer.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { playerKey, game, addPlayer } = this.props;\r\n    if (!playerKey && game.minigame.nameGenerator) {\r\n      addPlayer(this.generatePlayer());\r\n    }\r\n  }\r\n\r\n  handleChange = name => (event) => {\r\n    this.setState({\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  createPlayer() {\r\n    const { name } = this.state;\r\n    const { addPlayer } = this.props;\r\n    // validera så att namnet inte är taget.\r\n    const player = {\r\n      name,\r\n      score: 0,\r\n    };\r\n    addPlayer(player);\r\n  }\r\n\r\n  generatePlayer() {\r\n    const { game } = this.props;\r\n    let currentNames = [];\r\n    if (game.players) {\r\n      currentNames = Object.values(game.players).map(a => a.name);\r\n    }\r\n    const name = generateName(currentNames);\r\n    const player = {\r\n      name,\r\n      score: 0,\r\n    };\r\n    return player;\r\n  }\r\n\r\n\r\n  render() {\r\n    const { game, playerKey } = this.props;\r\n    const { name } = this.state;\r\n    let playerName = '';\r\n    if (game.players && playerKey && game.players[playerKey]) {\r\n      playerName = game.players[playerKey].name;\r\n    }\r\n    return (\r\n      <div className=\"phase-container\">\r\n        {playerName\r\n          ? (\r\n            <div>\r\n              <div className=\"quiz-top-section\" />\r\n              <div className=\"quiz-middle-section\">\r\n                <Typography variant=\"h5\">\r\n                  <span>Welcome </span>\r\n                  <span className=\"dynamic-text\">{playerName}</span>\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\"> Watch the screen, your name should show.</Typography>\r\n              </div>\r\n              <div className=\"quiz-bottom-section\" />\r\n            </div>\r\n          )\r\n          : (\r\n            <div>\r\n              <FormControl>\r\n                <TextField\r\n                  label=\"Name\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  margin=\"normal\"\r\n                  onChange={this.handleChange('name')}\r\n                />\r\n              </FormControl>\r\n              <Button onClick={this.createPlayer} variant=\"contained\">done</Button>\r\n            </div>\r\n          )\r\n            }\r\n      </div>\r\n    );\r\n  }\r\n}\r\nPhaseConnection.propTypes = {\r\n  game: PropTypes.object.isRequired,\r\n  playerKey: PropTypes.string,\r\n  addPlayer: PropTypes.func.isRequired,\r\n};\r\nexport default PhaseConnection;\r\n","import React, { Component } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass PhaseStarting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"phase-container\">\r\n        <div className=\"quiz-top-section\" />\r\n        <div className=\"quiz-middle-section\">\r\n          <Typography variant=\"h5\">Starting game...</Typography>\r\n        </div>\r\n        <div className=\"quiz-bottom-section\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhaseStarting;\r\n","import React, { Component } from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass PhaseFinalResult extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"phase-container\">\r\n        <div className=\"quiz-top-section\" />\r\n        <div className=\"quiz-middle-section\">\r\n          <Typography variant=\"h5\">Look at the screen. playerKey</Typography>\r\n        </div>\r\n        <div className=\"quiz-bottom-section\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhaseFinalResult;\r\n","export const WIDTH = 500;\r\nexport const HEIGHT = 250;\r\n\r\nexport const HOLE_HEIGHT = 10;\r\nexport const HOLE_CURVE_DEPTH = 7;\r\nexport const HOLE_WIDTH = 10;\r\nexport const BALL_RADIUS = 3;\r\nexport const BALL_RADIUS_CONTROLLER = 12;\r\n\r\nexport const MIN_POWER = 10;\r\nexport const MAX_POWER = 150;\r\nexport const SWING_STEP = 75;\r\n\r\nexport const TIMER_MS = 45 * 1000;\r\nexport const OVER_TIMER_MS = 7 * 1000;\r\nexport const HURRY_UP_MS = 15 * 1000;\r\nexport const IDLE_KICK_MS = 60 * 1000;\r\nexport const MATCH_LENGTH_MS = 5 * 60 * 1000;\r\nexport const MATCH_OVER_MS = 10 * 1000;\r\n\r\nexport const AIR_COLOR = \"#2f2f2f\";\r\nexport const GRASS_COLOR = \"green\";\r\nexport const ROUGH_COLOR = \"green\";\r\nexport const FAIRWAY_COLOR = \"green\";\r\nexport const GREEN_COLOR = \"green\";\r\nexport const BUNKER_COLOR = \"green\";\r\nexport const WATER_COLOR = \"blue\";\r\nexport const PENALTY_STROKES = 12;\r\n\r\nexport const PHYSICS_SPEED_FACTOR = 3;\r\n\r\nexport const SCORE_TERMS = [\r\n  {\r\n    name: \"Albatross\",\r\n    score: -3,\r\n  },\r\n  {\r\n    name: \"Eagle\",\r\n    score: -2,\r\n  },\r\n  {\r\n    name: \"Birdie\",\r\n    score: -1,\r\n  },\r\n  {\r\n    name: \"Par\",\r\n    score: 0,\r\n  },\r\n  {\r\n    name: \"Bogey\",\r\n    score: 1,\r\n  },\r\n  {\r\n    name: \"Double bogey\",\r\n    score: 2,\r\n  },\r\n  {\r\n    name: \"Triple bogey\",\r\n    score: 3,\r\n  },\r\n  {\r\n    name: \"Quadruple bogey\",\r\n    score: 4,\r\n  },\r\n];\r\n\r\nexport const CLUBS = [\r\n  {\r\n    name: \"Putter\",\r\n    type: \"putt\",\r\n    id: 0,\r\n    loft: 1,\r\n    powerFactor: 1.6,\r\n    max: 400,\r\n  },\r\n  {\r\n    name: \"Sand wedge\",\r\n    type: \"iron\",\r\n    id: 1,\r\n    loft: 78,\r\n    powerFactor: 2.6,\r\n    max: 700,\r\n  },\r\n  {\r\n    name: \"Pitch wedge\",\r\n    type: \"iron\",\r\n    id: 2,\r\n    loft: 62,\r\n    powerFactor: 2.75,\r\n    max: 700,\r\n  },\r\n  {\r\n    name: \"9 Iron\",\r\n    type: \"iron\",\r\n    id: 3,\r\n    loft: 49,\r\n    powerFactor: 2.9,\r\n    max: 700,\r\n  },\r\n  {\r\n    name: \"8 Iron\",\r\n    type: \"iron\",\r\n    id: 4,\r\n    loft: 46,\r\n    powerFactor: 2.95,\r\n    max: 700,\r\n  },\r\n  {\r\n    name: \"7 Iron\",\r\n    type: \"iron\",\r\n    id: 5,\r\n    loft: 43,\r\n    powerFactor: 3,\r\n    max: 700,\r\n  },\r\n  {\r\n    name: \"6 Iron\",\r\n    type: \"iron\",\r\n    id: 6,\r\n    loft: 40,\r\n    powerFactor: 3.05,\r\n    max: 700,\r\n  },\r\n  {\r\n    name: \"5 Iron\",\r\n    type: \"iron\",\r\n    id: 7,\r\n    loft: 37,\r\n    powerFactor: 3.1,\r\n    max: 700,\r\n  },\r\n  {\r\n    name: \"4 Iron\",\r\n    type: \"iron\",\r\n    id: 8,\r\n    loft: 34,\r\n    powerFactor: 3.15,\r\n    max: 700,\r\n  },\r\n  {\r\n    name: \"3 Iron\",\r\n    type: \"iron\",\r\n    id: 9,\r\n    loft: 31,\r\n    powerFactor: 3.2,\r\n    max: 700,\r\n  },\r\n  {\r\n    name: \"Fairway\",\r\n    type: \"wood\",\r\n    id: 10,\r\n    loft: 26,\r\n    powerFactor: 3.6,\r\n    max: 800,\r\n  },\r\n  {\r\n    name: \"Driver\",\r\n    type: \"wood\",\r\n    id: 11,\r\n    loft: 22,\r\n    powerFactor: 3.8,\r\n    max: 800,\r\n  },\r\n];\r\n\r\nexport const GROUND_COLORS = [\"orange\", \"brown\", \"gray\"];\r\n","import { sample } from 'lodash';\r\nimport tinycolor from 'tinycolor2';\r\nimport * as p2 from 'p2';\r\nimport {\r\n  HOLE_HEIGHT,\r\n  HOLE_CURVE_DEPTH,\r\n  HOLE_WIDTH,\r\n  GROUND_COLORS,\r\n  BALL_RADIUS,\r\n  CLUBS,\r\n  SCORE_TERMS,\r\n} from './GolfConstants';\r\n\r\n/* get an int between min and max inclusive */\r\nfunction randInt(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction shuffle(a) {\r\n  for (let i = a.length; i; i -= 1) {\r\n    const j = Math.floor(Math.random() * i);\r\n    const x = a[i - 1];\r\n    a[i - 1] = a[j];\r\n    a[j] = x;\r\n  }\r\n}\r\n\r\nconst ballMaterial = new p2.Material();\r\n\r\nconst groundMaterial = new p2.Material();\r\n\r\nconst holeMaterial = new p2.Material();\r\n\r\nconst ballGroundContact = new p2.ContactMaterial(ballMaterial, groundMaterial, {\r\n  friction: 1,\r\n  restitution: 0.5,\r\n});\r\n\r\nconst ballHoleContact = new p2.ContactMaterial(ballMaterial, holeMaterial, {\r\n  friction: 0.1,\r\n  restitution: 0,\r\n  relaxation: 8,\r\n});\r\n\r\nconst BALL_GROUP = Math.pow(2, 1);\r\nconst GROUND_GROUP = Math.pow(2, 2);\r\n\r\nexport function createWorld() {\r\n  const world = new p2.World({\r\n    gravity: [0, 60],\r\n  });\r\n\r\n  world.sleepMode = p2.World.BODY_SLEEPING;\r\n\r\n  world.addContactMaterial(ballGroundContact);\r\n  world.addContactMaterial(ballHoleContact);\r\n\r\n  return world;\r\n}\r\n\r\nexport function isInvalidSwing(swingData) {\r\n  // validerar att swingen måste ha minst x antal datapunkter, vilket säkerställer att det inte var en kort snärt bara.\r\n  if (swingData.length < 10) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n/*\r\n * Resets the ball position to level spawn if ball fell off world.\r\n */\r\n\r\nfunction newBall(position) {\r\n  const ballShape = new p2.Circle({\r\n    radius: BALL_RADIUS,\r\n    collisionGroup: BALL_GROUP,\r\n    collisionMask: GROUND_GROUP,\r\n  });\r\n\r\n  ballShape.material = ballMaterial;\r\n\r\n  const ballBody = new p2.Body({\r\n    mass: 1,\r\n    position,\r\n  });\r\n  ballBody.addShape(ballShape);\r\n\r\n  ballBody.angularDamping = 0.8;\r\n  ballBody.damping = 0.18;\r\n  ballBody.sleepTimeLimit = 1;\r\n  ballBody.sleepSpeedLimit = 2;\r\n\r\n  return ballBody;\r\n}\r\n// spawn: I.List<number>\r\nexport function createBall(spawn) {\r\n  return newBall([\r\n    spawn[0],\r\n    spawn[1] - BALL_RADIUS,\r\n  ]);\r\n}\r\nexport function getDistanceYards(a, b) {\r\n  if (a > b) {\r\n    return Math.floor((a - b) / 4);\r\n  }\r\n  return Math.floor((b - a) / 4);\r\n}\r\nexport function identifyClubType(velocity) {\r\n  const yRatio = velocity.y / (velocity.x + velocity.y);\r\n  const loft = yRatio * 90;\r\n  if (loft < 5) return 'putt';\r\n  const firstIron = CLUBS.find(x => x.type === 'iron');\r\n  if (loft < firstIron.loft - 1) {\r\n    return 'wood';\r\n  }\r\n  return 'iron';\r\n}\r\nexport function createBallFromInitial(position, velocity) {\r\n  const ball = newBall(position);\r\n  ball.velocity = velocity.slice(); // clone\r\n  return ball;\r\n}\r\nexport function createAudio(file) {\r\n  const snd = new Audio();\r\n  const src = document.createElement('source');\r\n  src.type = 'audio/mpeg';\r\n  src.src = file;\r\n  snd.appendChild(src);\r\n  return snd;\r\n}\r\nexport function getSwingData(club, acceleration) {\r\n  const xFactor = (90 - club.loft) / 90;\r\n  const YFactor = club.loft / 90;\r\n  const power = acceleration;\r\n  const swing = {\r\n    x: Math.min(Math.ceil(power * xFactor * club.powerFactor), club.max),\r\n    y: Math.min(Math.ceil(power * YFactor * club.powerFactor), club.max),\r\n  };\r\n  return swing;\r\n}\r\n\r\nexport function getScoreName(strokes, par) {\r\n  if (strokes === 1) return 'Hole in one!';\r\n  const score = strokes - par;\r\n  const term = SCORE_TERMS.find(x => x.score === score);\r\n  if (term) return term.name;\r\n  return `${score} over par`;\r\n}\r\nexport function validateSwingMovement(acceleration, clubIndex) {\r\n  // i teorin så finns det två olika godkända swingar. höger och vänster. sen även putt.\r\n  // z positiv = nedswing.\r\n  // x positiv = vänsterswing, negativ = högerswing\r\n\r\n  // använd golcbluban för att välja 3 olika valideringar. putter, iron, wood\r\n  // försök få till en ratio där värdena är giltiga: vid wood så är det precis när uppswingen börjar\r\n  // för putter så är det när z är väldigt liten +5 - -5 kanske. eller relativt till x\r\n  // för iron så är det när z är positiv, x och z är kanske lika i värden\r\n\r\n  // y får aldrig vara högre än någon av x eller z.\r\n\r\n  // regler: abs(x) måste vara större än z i alla swingar\r\n\r\n  // z får inte vara mycket negativ . max -2 eller så för\r\n  const xpower = Math.abs(acceleration.x);\r\n  const ypower = Math.abs(acceleration.y);\r\n  const zpower = Math.abs(acceleration.z);\r\n\r\n  if (ypower > xpower && ypower > zpower) return false;\r\n\r\n  const club = CLUBS[clubIndex];\r\n  switch (club.type) {\r\n    case 'wood':\r\n    // z måste vara negativ och den får inte vara mer än 50% av xpower\r\n      return xpower > zpower;\r\n    case 'iron':\r\n      if (acceleration.z < 0) return false;\r\n      const angleRatio = xpower / zpower;\r\n      return angleRatio > 0.5 && angleRatio < 5;\r\n    case 'putt':\r\n      return xpower / 2 > zpower;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return true;\r\n}\r\nexport function addHolePoints(level) {\r\n  const { width } = level;\r\n\r\n  // points has to start with x=0 and end with x=WIDTH\r\n  if (level.points[0][0] !== 0) {\r\n    throw new Error('invalid points: first x !== 0');\r\n  }\r\n  if (level.points[level.points.length - 1][0] !== width) {\r\n    throw new Error(`invalid points: last x !== WIDTH (${width})`);\r\n  }\r\n\r\n  // insert hole\r\n  // get the first point after the hole...\r\n  const idxAfterHole = level.points.findIndex(point => point[0] > level.hole[0]);\r\n  // const idxAfterHole = level.points.findIndex(point => point.get(0) > level.hole.get(0));\r\n\r\n  const x1 = level.hole[0] - HOLE_WIDTH / 2;\r\n  const x2 = level.hole[0] + HOLE_WIDTH / 2;\r\n\r\n  if (x1 <= level.points[idxAfterHole - 1][0]) {\r\n    throw new Error('invalid points: hole x1 cannot be <= the previous x');\r\n  }\r\n\r\n  if (x2 >= level.points[idxAfterHole][0]) {\r\n    throw new Error('invalid points: hole x2 cannot be >= the previous x');\r\n  }\r\n\r\n  // ...then insert hole between points\r\n  const holePoints = [\r\n    [level.hole[0] - HOLE_WIDTH / 2, level.hole[1]],\r\n    [level.hole[0] - HOLE_WIDTH / 2, level.hole[1] + HOLE_CURVE_DEPTH],\r\n    [level.hole[0], level.hole[1] + HOLE_HEIGHT],\r\n    [level.hole[0] + HOLE_WIDTH / 2, level.hole[1] + HOLE_CURVE_DEPTH],\r\n    [level.hole[0] + HOLE_WIDTH / 2, level.hole[1]],\r\n  ];\r\n\r\n  const pointsWithHole = level.points\r\n    .slice(0, idxAfterHole)\r\n    .concat(holePoints)\r\n    .concat(level.points.slice(idxAfterHole));\r\n  const levelWithHolePoints = { ...level, points: pointsWithHole };\r\n  return levelWithHolePoints;\r\n}\r\n\r\nexport function createGround(level) {\r\n  const { height, width } = level;\r\n  // This used to create a single ground shape.\r\n  // Now it creates 3 because this mysteriously fixes a bug where the ground after the hole wasn't\r\n  // working correctly? man I don't even know\r\n  const beforeHole = level.points.filter(point => point[0] < level.hole[0]);\r\n  const afterHole = level.points.filter(point => point[0] > level.hole[0]);\r\n\r\n  const vertsBeforeHole = beforeHole.concat([\r\n    [beforeHole[beforeHole.length - 1][0], height],\r\n    [0, height],\r\n  ]);\r\n\r\n  // Creates this shape:\r\n  // |\\/|\r\n  // |  |\r\n  // |  |\r\n  // |__|\r\n  const vertsHole = [\r\n    [level.hole[0] - HOLE_WIDTH / 2, level.hole[1] + HOLE_CURVE_DEPTH],\r\n    [level.hole[0], level.hole[1] + HOLE_HEIGHT],\r\n    [level.hole[0] + HOLE_WIDTH / 2, level.hole[1] + HOLE_CURVE_DEPTH],\r\n    [level.hole[0] + HOLE_WIDTH / 2, height],\r\n    [level.hole[0] - HOLE_WIDTH / 2, height],\r\n  ];\r\n\r\n  const vertsAfterHole = afterHole.concat([\r\n    [width, height],\r\n    [afterHole[0][0], height],\r\n  ]);\r\n\r\n  const grounds = [vertsBeforeHole, vertsHole, vertsAfterHole].map((verts) => {\r\n    const body = new p2.Body({\r\n      mass: 0,\r\n    });\r\n\r\n    body.fromPolygon(verts);\r\n\r\n    for (const shape of body.shapes) {\r\n      if (verts === vertsHole) {\r\n        shape.material = holeMaterial;\r\n      } else {\r\n        shape.material = groundMaterial;\r\n      }\r\n\r\n      shape.collisionGroup = GROUND_GROUP;\r\n      shape.collisionMask = BALL_GROUP;\r\n    }\r\n\r\n    return body;\r\n  });\r\n\r\n  return grounds;\r\n}\r\n// pos: I.List<number>\r\nexport function createHoleSensor(pos) {\r\n  const sensorShape = new p2.Box({\r\n    width: HOLE_WIDTH,\r\n    height: HOLE_HEIGHT,\r\n  });\r\n\r\n  sensorShape.sensor = true;\r\n  sensorShape.collisionGroup = GROUND_GROUP;\r\n  sensorShape.collisionMask = BALL_GROUP;\r\n\r\n  // Sensor is purposely built halfway into the ground so top edge collisions are avoided\r\n  const sensorBody = new p2.Body({\r\n    position: [\r\n      pos[0],\r\n      pos[1] + (Math.ceil(HOLE_HEIGHT * 1.4)),\r\n    ],\r\n  });\r\n  sensorBody.damping = 0;\r\n  sensorBody.addShape(sensorShape);\r\n\r\n  return sensorBody;\r\n}\r\n\r\nexport function getSegmentWidths(totalWidth, minWidth) {\r\n  const widths = [];\r\n  let remainingWidth = totalWidth;\r\n\r\n  while (remainingWidth > 0) {\r\n    let maxWidth = 50;\r\n\r\n    if (remainingWidth < maxWidth) {\r\n      maxWidth = remainingWidth;\r\n    }\r\n\r\n    let width = randInt(minWidth, maxWidth);\r\n\r\n    // if this segment would leave us with < minWidth remaining width, just make this segment the\r\n    // entire remaining width\r\n    if (remainingWidth - width < minWidth) {\r\n      width = remainingWidth;\r\n    }\r\n\r\n    widths.push(width);\r\n    remainingWidth -= width;\r\n  }\r\n\r\n  // shuffle widths so it's not biased towards having smaller segments at the end\r\n  shuffle(widths);\r\n\r\n  return widths;\r\n}\r\nexport function calculateStrokeScore(strokes, level) {\r\n  const parScore = {\r\n    3: strokes === 1 ? 25 : 25 - (strokes * 2),\r\n    4: strokes === 1 ? 25 : 25 - (strokes * 2),\r\n    5: strokes === 1 ? 25 : 25 - (strokes * 2),\r\n  };\r\n  return Math.abs(Math.round(parScore[level.par]));\r\n}\r\nexport function calculateTimeScore(scoretime, level) {\r\n  return Math.round((((level.time / 1000) * 1.5) - scoretime) / 10);\r\n}\r\nexport function getPlayerColors(len) {\r\n  const goldenRatio = 0.618033988749895;\r\n  const colors = [];\r\n  const s = 0.5;\r\n  const v = 0.95;\r\n  let h = Math.random();\r\n  for (let i = 0; i < len; i++) {\r\n    h += goldenRatio;\r\n    h %= 1;\r\n    const tiny = tinycolor.fromRatio({ h, s, v });\r\n    colors.push(tiny.toHexString());\r\n  }\r\n\r\n  return colors;\r\n}\r\n// lägg till olika material de två segementerna närmast hålet ska vara green, där färgen är anoorlunda och friktionen mindre\r\n// vattenhinder? blått och räknas likt outOfBounds? fast sätt tillbaka till senaste pos, spara alltid senaste pos använd även för outofbounds?\r\n// bunker: hög friktion, ingen studs = damping?\r\n// bunker och vatten kan bara finnas på plant eller i en viaduct, ta nåra av de spetsiga hålen/viaducterna och gör till vatten eller bunker\r\n// bunker och vatten kan påverka par? kan öka paret ett snäpp om det är mycket bunker/vatten\r\n// rough och fairway är samma? tillsvidare\r\nexport function levelGen(width, height, test) {\r\n  if (test) {\r\n    const testLevel = {\r\n      points: [\r\n        [0, 400],\r\n        [width, 400],\r\n      ],\r\n      hole: [width / 1.5, 400],\r\n      spawn: [100, 400],\r\n      color: 'brown',\r\n      par: 4,\r\n      height,\r\n      time: 20 * 1000,\r\n      width,\r\n    };\r\n    return testLevel;\r\n  }\r\n\r\n  const segmentWidths = getSegmentWidths(width, 12);\r\n  const numSegments = segmentWidths.length;\r\n\r\n  const spawnSegment = randInt(2, 4);\r\n  let par;\r\n  if (width > 1000) {\r\n    const rnd = randInt(1, 18);\r\n    if (rnd > 8) {\r\n      par = 4;\r\n    } else if (rnd > 4) {\r\n      par = 5;\r\n    } else {\r\n      par = 3;\r\n    }\r\n  } else {\r\n    par = 5;\r\n  }\r\n\r\n  const parSetting = {\r\n    hole: {\r\n      5: numSegments - randInt(2, Math.floor(numSegments / 4)),\r\n      4: numSegments - randInt(Math.floor(numSegments / 4), Math.floor(numSegments / 2.5)),\r\n      3: numSegments - randInt(Math.floor(numSegments / 2.5), Math.floor(numSegments / 2)),\r\n    },\r\n    time: {\r\n      5: 100 * 1000,\r\n      4: 80 * 1000,\r\n      3: 60 * 1000,\r\n    },\r\n    flatRatio: {\r\n      5: 40,\r\n      4: 30,\r\n      3: 20,\r\n    },\r\n  };\r\n\r\n  const holeSegment = parSetting.hole[par];\r\n\r\n  const time = parSetting.time[par];\r\n\r\n  const points = [];\r\n  let spawnX;\r\n  let spawnY;\r\n  let holeX;\r\n  let holeY;\r\n\r\n  const minY = Math.floor(height * 0.4);\r\n  const maxY = minY + Math.min(400, height * 0.5);\r\n\r\n  for (let idx = 0; idx <= numSegments; idx++) {\r\n    const segmentWidth = segmentWidths[idx - 1];\r\n\r\n    let x; let\r\n      y;\r\n\r\n    if (idx === 0) {\r\n      x = 0;\r\n    } else {\r\n      x = points[idx - 1][0] + segmentWidth;\r\n    }\r\n\r\n    if (x > width) {\r\n      x = width;\r\n    }\r\n\r\n    if (idx === 0) {\r\n      y = randInt(height - 150, height - 20);\r\n    } else {\r\n      const prevY = points[idx - 1][1];\r\n\r\n      // special-case flat section\r\n      if (randInt(1, parSetting.flatRatio[par]) > 10) {\r\n        y = prevY;\r\n      } else {\r\n        let boundLow = prevY - 40;\r\n        let boundHigh = prevY + 40;\r\n\r\n        // clamp high/low bounds so that if they go out of screen bounds, the bounds shift to\r\n        // contain the same range but clamped\r\n        if (boundLow < minY) {\r\n          boundHigh -= (boundLow - minY);\r\n          boundLow = minY;\r\n        }\r\n\r\n        if (boundHigh > maxY) {\r\n          boundLow -= (boundHigh - maxY);\r\n          boundHigh = maxY;\r\n        }\r\n\r\n        y = randInt(boundLow, boundHigh);\r\n      }\r\n    }\r\n\r\n    if (idx === spawnSegment) {\r\n      spawnX = x - Math.round(segmentWidth / 2);\r\n      y = points[idx - 1][1];\r\n      spawnY = y;\r\n    }\r\n\r\n    if (idx === holeSegment) {\r\n      holeX = x - Math.round(segmentWidth / 2);\r\n      y = points[idx - 1][1];\r\n      holeY = y;\r\n    }\r\n\r\n    points.push([x, y]);\r\n  }\r\n\r\n  const color = sample(GROUND_COLORS);\r\n\r\n  const hole = [holeX, holeY];\r\n  const spawn = [spawnX, spawnY];\r\n\r\n  const level = {\r\n    points,\r\n    hole,\r\n    spawn,\r\n    color,\r\n    par,\r\n    time,\r\n    height,\r\n    width,\r\n  };\r\n\r\n  return level;\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport ReactSpeedometer from \"react-d3-speedometer\";\r\nimport * as util from \"./GolfUtil\";\r\nimport { fire } from \"../../../base\";\r\nimport \"./golf.css\";\r\nimport {\r\n  MAX_POWER,\r\n  MIN_POWER,\r\n  CLUBS,\r\n  BALL_RADIUS,\r\n  AIR_COLOR,\r\n  GRASS_COLOR,\r\n  BALL_RADIUS_CONTROLLER,\r\n} from \"./GolfConstants\";\r\nimport driverIcon from \"./img/driverIcon.svg\";\r\nimport ironIcon from \"./img/ironIcon.svg\";\r\nimport putterIcon from \"./img/putterIcon.svg\";\r\nimport golfbagIcon from \"./img/golfbag.svg\";\r\nimport fingerprintIcon from \"./img/fingerprint.svg\";\r\nimport skyImage from \"./img/sky.png\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\n\r\nconst styles = (theme) => ({\r\n  container: {\r\n    height: \"100vh\",\r\n    width: \"100vw\",\r\n  },\r\n  canvas: {},\r\n  header: {\r\n    height: 80,\r\n  },\r\n  footer: {\r\n    height: 180,\r\n    marginTop: \"-4px\",\r\n  },\r\n  clubwrapper: {\r\n    height: \"49vh\",\r\n    width: \"10vw\",\r\n    bottom: \"210px\",\r\n    position: \"absolute\",\r\n  },\r\n  clubiconWrapper: {\r\n    position: \"absolute\",\r\n    bottom: \"188px\",\r\n    left: \"50%\",\r\n    marginLeft: \"20px\",\r\n  },\r\n});\r\n\r\nlet canvas;\r\nlet ctx;\r\n\r\nfunction drawBall(x, y, fill, stroke, playerState) {\r\n  ctx.lineWidth = 1;\r\n  ctx.fillStyle = fill;\r\n  ctx.strokeStyle = stroke;\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, BALL_RADIUS_CONTROLLER, 0, 2 * Math.PI);\r\n  ctx.fill();\r\n  ctx.closePath();\r\n\r\n  ctx.beginPath();\r\n  ctx.arc(x, y, BALL_RADIUS_CONTROLLER - ctx.lineWidth / 2, 0, 2 * Math.PI);\r\n  ctx.stroke();\r\n  ctx.closePath();\r\n}\r\n\r\nfunction drawSwing(swingData) {\r\n  const len = swingData.length;\r\n  // test om den här. det ska vara hela swingen efter att den är klar som ritas.\r\n  // kolla på drawGround etc. där behöver jag inte loopa beginpath och stroke etc. utan jag har istöället en start pos\r\n\r\n  // behöver hålla ritningen inom canvasen. så hitta de största och minsta värdena på varje axel och räkna om alla punkter baserat på det\r\n  // så en liten eller stor swing blir lika\r\n\r\n  // skapa en förutbestämd bana och använd bara x från swingen?\r\n  const prevSwing = {\r\n    y: canvas.height / 2 - BALL_RADIUS_CONTROLLER * 2,\r\n    x: canvas.width / 2,\r\n  };\r\n  for (let i = 0; i < len; i++) {\r\n    const newY = prevSwing.y + Math.round(swingData[i].z);\r\n    const newX = prevSwing.x + Math.round(swingData[i].x);\r\n    ctx.beginPath();\r\n    ctx.moveTo(prevSwing.x, prevSwing.y);\r\n    ctx.lineTo(newX, newY);\r\n    ctx.stroke();\r\n    prevSwing.y = newY;\r\n    prevSwing.x = newX;\r\n  }\r\n}\r\nfunction drawEnvironment(x, y, groundColor, stroke) {\r\n  ctx.fillStyle = GRASS_COLOR;\r\n  ctx.fillRect(0, y - BALL_RADIUS_CONTROLLER, x, BALL_RADIUS_CONTROLLER);\r\n  // groundcolor längst ner\r\n  // GRASS_COLOR är stroke\r\n  // WITH på\r\n  // AIR_COLOR är överdelen\r\n}\r\nfunction drawStrokes(x, y, strokes) {\r\n  ctx.font = \"28px roboto\";\r\n  ctx.fillStyle = \"#000000\";\r\n  ctx.textAlign = \"center\";\r\n  ctx.fillText(`Slag: ${strokes}`, x, y);\r\n}\r\n\r\nfunction drawDistance(x, y, distance) {\r\n  ctx.font = \"24px roboto\";\r\n  ctx.fillStyle = \"#000000\";\r\n  ctx.textAlign = \"center\";\r\n  ctx.fillText(`Distance: ${distance} yards`, x, y);\r\n}\r\nfunction drawScoreText(x, y, player, strokes) {\r\n  ctx.font = \"20px roboto\";\r\n  ctx.fillStyle = \"#000000\";\r\n  ctx.textAlign = \"center\";\r\n  ctx.fillText(`${strokes} strokes in ${player.scoreTime} seconds`, x, y);\r\n}\r\nfunction clearCanvas() {\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nclass GolfController extends Component {\r\n  static getDerivedStateFromProps(props, currentState) {\r\n    if (currentState.round !== props.game.minigame.round) {\r\n      return {\r\n        round: props.game.minigame.round,\r\n        strokes: 0,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    // sätt det här till rätt höjd. det ska vara windowheight - header - footer\r\n    const canvasHeight = Math.floor(window.innerHeight - 180);\r\n    const canvasWidth = Math.floor(window.innerWidth);\r\n    const clubIcons = {\r\n      wood: driverIcon,\r\n      iron: ironIcon,\r\n      putt: putterIcon,\r\n    };\r\n    this.state = {\r\n      highestAcceleration: 0,\r\n      isSwinging: false,\r\n      swingData: [],\r\n      clubIndex: 0,\r\n      round: 1,\r\n      canvasHeight,\r\n      strokes: 0,\r\n      canvasWidth,\r\n      anchorEl: null,\r\n      clubIcons,\r\n    };\r\n    this.renderFrame = this.renderFrame.bind(this);\r\n    this.saveSwing = this.saveSwing.bind(this);\r\n    this.testSwing = this.testSwing.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    canvas = document.getElementById(\"swingcanvas\");\r\n    ctx = canvas.getContext(\"2d\");\r\n    ctx.translate(0.5, 0.5);\r\n    const that = this;\r\n\r\n    if (typeof DeviceMotionEvent.requestPermission === \"function\") {\r\n      DeviceMotionEvent.requestPermission()\r\n        .then((permissionState) => {\r\n          if (permissionState === \"granted\") {\r\n            window.addEventListener(\r\n              \"devicemotion\",\r\n              (e) => {\r\n                const event = e || window.event;\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                const {\r\n                  isSwinging,\r\n                  swingData,\r\n                  highestAcceleration,\r\n                  clubIndex,\r\n                } = that.state;\r\n                if (isSwinging) {\r\n                  const { x, y, z } = event.acceleration;\r\n                  swingData.push({\r\n                    x: Math.round(x * 2),\r\n                    y: Math.round(y * 2),\r\n                    z: Math.round(z * 2),\r\n                  });\r\n                  // this.drawSwing([{ x: Math.round(x * 2), y: Math.round(y * 2), z: Math.round(z * 2) }]);\r\n\r\n                  // hur är detta legit? både x och z kan ju vara minusvärden? jag borde lägga om dem till positiva?\r\n                  // eller kan jag använda detta för att bara mäta nersvingen?? genom att bara läsa av negative eller positiva värden\r\n                  // vilekt som nu är neråt\r\n                  // måste göra flera tester, ska y inte tas med?\r\n                  // koppla i telefonen och debuga\r\n                  const xpower = Math.abs(x);\r\n                  const zpower = Math.abs(z);\r\n\r\n                  const power = Math.floor(xpower + zpower);\r\n                  // const power2 = Math.floor(Math.abs(y) + Math.abs(z));\r\n                  // const power3 = Math.floor(Math.abs(x) + Math.abs(y));\r\n\r\n                  // && util.validateSwingMovement(event.acceleration, clubIndex)\r\n                  if (power > highestAcceleration) {\r\n                    that.setState(() => ({\r\n                      highestAcceleration: power,\r\n                      swingData,\r\n                    }));\r\n                  } else {\r\n                    that.setState({ swingData });\r\n                  }\r\n                }\r\n              },\r\n              true\r\n            );\r\n          } else {\r\n            alert(\"device motion permission not granted\");\r\n          }\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert(\"device has no request permission function\");\r\n    }\r\n\r\n    canvas.addEventListener(\r\n      \"touchstart\",\r\n      (e) => {\r\n        const event = e || window.event;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        that.setState(() => {\r\n          const highestAcceleration = 0;\r\n          const swingData = [];\r\n          const isSwinging = true;\r\n          return { highestAcceleration, swingData, isSwinging };\r\n        });\r\n        // this.renderFrame();\r\n\r\n        // e.preventDefault();\r\n      },\r\n      false\r\n    );\r\n\r\n    canvas.addEventListener(\r\n      \"touchend\",\r\n      (e) => {\r\n        const event = e || window.event;\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        const { highestAcceleration, clubIndex } = that.state;\r\n        that.setState(() => {\r\n          const isSwinging = false;\r\n          return { isSwinging };\r\n        });\r\n        this.saveSwing(highestAcceleration, clubIndex);\r\n        // this.renderFrame();\r\n        // e.preventDefault();\r\n      },\r\n      false\r\n    );\r\n\r\n    this.renderFrame();\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    const { swingData, isSwinging, strokes, anchorEl, clubIndex } = this.state;\r\n    console.log(\"shouldComponentUpdate\");\r\n    if (nextState.isSwinging !== isSwinging) {\r\n      return true;\r\n    }\r\n    // if (nextState.swingData !== swingData) {\r\n    //   return false;\r\n    // }\r\n\r\n    if (nextState.strokes !== strokes) {\r\n      return true;\r\n    }\r\n    if (nextState.anchorEl !== anchorEl) {\r\n      console.log(\"yes anchorEI\");\r\n\r\n      return true;\r\n    }\r\n    if (nextState.clubIndex !== clubIndex) {\r\n      console.log(\"yes clubindex\");\r\n\r\n      return true;\r\n    }\r\n    const { game, playerKey } = this.props;\r\n    if (nextProps.game.phase !== game.phase) {\r\n      return true;\r\n    }\r\n\r\n    const currentPlayer = game.players[playerKey];\r\n    const nextCurrentPlayer = nextProps.game.players[playerKey];\r\n    if (currentPlayer.state !== nextCurrentPlayer.state) {\r\n      return true;\r\n    }\r\n    console.log(\"false\");\r\n\r\n    return false;\r\n  }\r\n\r\n  handleClick = (event) => {\r\n    this.setState({ anchorEl: event.currentTarget });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ anchorEl: null });\r\n  };\r\n\r\n  handleChange = (name) => (event) => {\r\n    this.setState({\r\n      [name]: event.target.value,\r\n      // anchorEl: null,\r\n    });\r\n  };\r\n\r\n  handleChangeSelect = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  testSwing() {\r\n    const acceleration = Math.floor(Math.random() * 100) + 10;\r\n    this.saveSwing(acceleration, 2, true);\r\n  }\r\n\r\n  saveSwing(acceleration, clubIndex, test) {\r\n    const { playerKey, game } = this.props;\r\n    const { swingData } = this.state;\r\n    const currentPlayer = game.players[playerKey];\r\n    if (currentPlayer.state !== \"STILL\") {\r\n      alert(\"ball is not still\");\r\n      return;\r\n    }\r\n    if (game.phase !== \"gameplay\") {\r\n      alert(\"game is not playing\");\r\n      return;\r\n    }\r\n\r\n    if (util.isInvalidSwing(swingData) && !test) {\r\n      alert(\"invalid swing\");\r\n      return;\r\n    }\r\n    // ska bara kunna används wood på första slaget? ge det lite extra power\r\n    const club = CLUBS[clubIndex];\r\n    const swing = util.getSwingData(club, acceleration);\r\n    this.setState((state) => ({\r\n      strokes: state.strokes + 1,\r\n    }));\r\n    // test\r\n    // test\r\n\r\n    fire\r\n      .database()\r\n      .ref(`/games/${game.key}/players/${playerKey}/swing`)\r\n      .set(swing, (error) => {\r\n        if (error) {\r\n          console.log(\"error updated swing move\");\r\n        } else {\r\n          console.log(\"saved swing success\");\r\n        }\r\n      });\r\n  }\r\n\r\n  saveFindMyBall() {\r\n    const { playerKey, game } = this.props;\r\n    const currentPlayer = game.players[playerKey];\r\n\r\n    if (game.phase !== \"gameplay\") {\r\n      alert(\"game is not playing\");\r\n      return;\r\n    }\r\n\r\n    fire\r\n      .database()\r\n      .ref(`/games/${game.key}/players/${playerKey}/showNameTag`)\r\n      .set(!currentPlayer.showNameTag, (error) => {\r\n        if (error) {\r\n          console.log(\"error updated showNameTag\");\r\n        } else {\r\n          console.log(\"saved showNameTag success\");\r\n        }\r\n      });\r\n  }\r\n\r\n  renderFrame() {\r\n    const { game, playerKey, classes } = this.props;\r\n    const { swingData, strokes } = this.state;\r\n    if (!ctx) {\r\n      return;\r\n    }\r\n    const currentPlayer = game.players[playerKey];\r\n\r\n    ctx.lineWidth = 4;\r\n    const background = new Image();\r\n    background.src = skyImage;\r\n\r\n    //TODO competedive är broken då det går på tid. man kan vänta ut och få bra poäng...\r\n    //TODO ta bort tiden? ja tror det bäst.\r\n\r\n    background.onload = function() {\r\n      clearCanvas();\r\n      ctx.drawImage(background, 0, 0, canvas.width, canvas.height);\r\n\r\n      const fingerprint = new Image();\r\n      fingerprint.onload = function() {\r\n        ctx.globalAlpha = 0.3;\r\n        ctx.drawImage(\r\n          fingerprint,\r\n          canvas.width / 4,\r\n          canvas.height / 4,\r\n          canvas.width / 2,\r\n          canvas.width / 2\r\n        );\r\n        ctx.globalAlpha = 1;\r\n      };\r\n      fingerprint.src = fingerprintIcon;\r\n      drawSwing(swingData);\r\n      drawEnvironment(\r\n        canvas.width,\r\n        canvas.height,\r\n        game.minigame.levelColor,\r\n        \"gray\"\r\n      );\r\n      if (currentPlayer.state === \"STILL\") {\r\n        drawStrokes(canvas.width / 2, 48, strokes);\r\n        drawBall(\r\n          canvas.width / 2,\r\n          canvas.height - BALL_RADIUS_CONTROLLER * 2 + 4,\r\n          currentPlayer.color,\r\n          \"gray\"\r\n        );\r\n        drawDistance(canvas.width / 2, 24, currentPlayer.distance);\r\n      } else if (currentPlayer.state === \"SCORED\") {\r\n        drawScoreText(canvas.width / 2, 72 / 2, currentPlayer, strokes);\r\n      }\r\n    };\r\n  }\r\n\r\n  // man ska kunna swinga hela tiden men det är bara när player.state är 'STILL' som en boll rendreras och swingen kan sparas.\r\n  // lägg till en selectbox där man väljer klubba som står loftAngle.\r\n  // lägg till en snyggare powermätare. använd någon riktigt visuel mätare\r\n  render() {\r\n    const { game, playerKey, classes } = this.props;\r\n    const {\r\n      highestAcceleration,\r\n      isSwinging,\r\n      canvasHeight,\r\n      canvasWidth,\r\n      clubIndex,\r\n      anchorEl,\r\n      clubIcons,\r\n    } = this.state;\r\n    const open = Boolean(anchorEl);\r\n    const choosenClub = CLUBS[clubIndex];\r\n    this.renderFrame();\r\n\r\n    const ClubSlider = withStyles({\r\n      thumb: {\r\n        width: 20,\r\n        height: 20,\r\n        marginLeft: \"-10px !important\",\r\n        marginBottom: \"-8px !important\",\r\n        backgroundColor: \"#fffffff5\",\r\n      },\r\n      active: {},\r\n      track: {\r\n        height: 4,\r\n      },\r\n      rail: {\r\n        height: 4,\r\n        opacity: 0.5,\r\n        backgroundColor: \"#3880f\",\r\n      },\r\n      mark: {\r\n        backgroundColor: \"currentcolor\",\r\n        height: 1,\r\n        width: 8,\r\n        marginTop: -3,\r\n        color: \"#3880f\",\r\n      },\r\n      markActive: {\r\n        opacity: 1,\r\n        backgroundColor: \"currentcolor\",\r\n      },\r\n      markLabel: {\r\n        color: \"rgba(0, 0, 0, 0.87)\",\r\n        fontWeight: 500,\r\n      },\r\n      markLabelActive: {\r\n        color: \"rgba(0, 0, 0, 0.87)\",\r\n      },\r\n    })(Slider);\r\n\r\n    function valuetext(value) {\r\n      return `${value}°C`;\r\n    }\r\n    const marks = [\r\n      {\r\n        value: 0,\r\n        label: CLUBS[0].name,\r\n      },\r\n      {\r\n        value: CLUBS.length - 1,\r\n        label: CLUBS[CLUBS.length - 1].name,\r\n      },\r\n    ];\r\n    function GolfThumbComponent(props) {\r\n      return <span {...props}></span>;\r\n    }\r\n    const handleChangeSlider = (event, newValue) => {\r\n      console.log(\"newvalue slider:\" + newValue);\r\n      this.setState({\r\n        [\"clubIndex\"]: newValue,\r\n      });\r\n    };\r\n\r\n    // const [value, setValue] = React.useState(1);\r\n\r\n    // const handleChangeSlider2 = (event, newValue) => {\r\n    //   setValue(newValue);\r\n    // };\r\n\r\n    return (\r\n      <div className=\"phase-container\">\r\n        <div className={classes.container}>\r\n          <canvas\r\n            id=\"swingcanvas\"\r\n            className={classes.canvas}\r\n            height={canvasHeight}\r\n            width={canvasWidth}\r\n          />\r\n          <div className={classes.clubwrapper}>\r\n            {\r\n              //fixa stylen innan jag fixar logiken. större boll och slider.\r\n              /* använd klubbikonerna? kanske ha den som den var innan. detta\r\n            ersätter bara selecten. //vi visar alltså fortfarande ikon för vad\r\n            man valt? \r\n            ultimata jag vill ha: \r\n            En stor boll och lite bredare linje kanske. \r\n            På bollen ska det stå vilken klubba man valt. ikon + namn(Driver, 7 iron, wedge, putter...)kolla på exemplet med custom airbnb för hur man gör. \r\n              ^börja med ett enkelt test att det går att skriva current value i bollen och att det updateras medan man drar iden.. \r\n              ^^om det inte fungerar med ovan tänkt så kolla en custom tooltip är möjlig? fanns några exempel fast med text? \r\n              ^^ om det inte är möjligt så skriv ut alla klubbor på linjen bara och kör på det. markera tydligt vilken man valt. den har grön färg eller något.bold. \r\n            Den ska vara stegad på alla möjliga klubbor. \r\n            enda som ska stå på linjen ska vara ikonerna för driver och putter uppe och nere så man vet vilket håll man ska scrolla åt. \r\n            */\r\n            }\r\n            <ClubSlider\r\n              value={clubIndex}\r\n              aria-label=\"golf club selector\"\r\n              defaultValue={CLUBS.length - 1}\r\n              orientation=\"vertical\"\r\n              marks={CLUBS.map((c) => ({\r\n                value: c.id,\r\n                label: c.name,\r\n              }))}\r\n              min={0}\r\n              max={CLUBS.length - 1}\r\n              step={1}\r\n              onChangeCommitted={handleChangeSlider}\r\n              // ThumbComponent={GolfThumbComponent}\r\n            />\r\n\r\n            {/* <Slider\r\n              orientation=\"vertical\"\r\n              getAriaValueText={valuetext}\r\n              defaultValue={30}\r\n              marks={marks}\r\n              step={10}\r\n              aria-labelledby=\"vertical-slider\"\r\n            /> */}\r\n            {/* <Button\r\n              aria-owns={open ? \"club-menu\" : undefined}\r\n              aria-haspopup=\"true\"\r\n              style={{ marginLeft: \"-20px\", marginRight: \"-20px\" }}\r\n              onClick={this.handleClick}\r\n            >\r\n              <img src={golfbagIcon} alt=\"choose club\" height=\"100\" />\r\n            </Button>\r\n            <Menu\r\n              id=\"club-menu\"\r\n              anchorEl={anchorEl}\r\n              open={open}\r\n              onClose={this.handleClose}\r\n            >\r\n              {CLUBS.map((c) => (\r\n                <MenuItem\r\n                  onClick={this.handleChange(\"clubIndex\")}\r\n                  key={c.id}\r\n                  value={c.id}\r\n                >\r\n                  <img\r\n                    src={clubIcons[c.type]}\r\n                    alt={c.name}\r\n                    className={classes.menuitemicon}\r\n                  />\r\n                  {c.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n            <Typography\r\n              variant=\"body2\"\r\n              style={{ display: \"grid\", paddingBottom: \"8px\" }}\r\n            >\r\n              <span>{choosenClub.name}</span>\r\n              <img src={clubIcons[choosenClub.type]} alt=\"club\" height=\"60\" />\r\n            </Typography> */}\r\n          </div>\r\n          <div className={classes.clubiconWrapper}>\r\n            <img\r\n              className={classes.clubicon}\r\n              src={clubIcons[choosenClub.type]}\r\n              alt=\"club\"\r\n              height=\"60\"\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className={classes.footer}\r\n            style={{ backgroundColor: game.minigame.levelColor }}\r\n          >\r\n            <ReactSpeedometer\r\n              minValue={0}\r\n              height={174}\r\n              startColor=\"green\"\r\n              ringWidth={40}\r\n              segments={10}\r\n              needleTransitionDuration={50}\r\n              needleTransition=\"easeLinear\"\r\n              textColor=\"ghostwhite\"\r\n              needleColor=\"ghostwhite\"\r\n              endColor=\"red\"\r\n              currentValueText=\"${value} m/s\"\r\n              maxValue={100}\r\n              value={highestAcceleration / 2}\r\n            />\r\n          </div>\r\n          {/* <button\r\n            style={{ position: \"absolute\", top: \"0\", left: \"0\" }}\r\n            type=\"button\"\r\n            onClick={this.testSwing}\r\n          >\r\n            swing\r\n          </button> */}\r\n          <Button\r\n            onClick={() => this.saveFindMyBall()}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            style={{\r\n              position: \"absolute\",\r\n              top: \"38px\",\r\n              left: \"0\",\r\n            }}\r\n          >\r\n            Find ball\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nGolfController.propTypes = {\r\n  playerKey: PropTypes.string.isRequired,\r\n  game: PropTypes.object.isRequired,\r\n  classes: PropTypes.any,\r\n};\r\nexport default withStyles(styles)(GolfController);\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\nimport PhaseConnection from \"./PhaseConnection\";\r\nimport PhaseStarting from \"./PhaseStarting\";\r\nimport PhaseFinalResult from \"./PhaseFinalResult\";\r\nimport GolfController from \"../golf/GolfController\";\r\n\r\nclass Minigame extends PureComponent {\r\n  render() {\r\n    const { game, playerKey, createPlayer } = this.props;\r\n    const lastPhase = game.phase === \"final_result\" || game.phase === \"end\";\r\n    return (\r\n      <div className=\"play-container\">\r\n        {game.phase === \"connection\" && (\r\n          <PhaseConnection\r\n            game={game}\r\n            addPlayer={createPlayer}\r\n            playerKey={playerKey}\r\n          />\r\n        )}\r\n        {game.phase === \"starting\" && <PhaseStarting game={game} />}\r\n        {(game.phase === \"gameplay\" || game.phase === \"level_completed\") && (\r\n          <GolfController game={game} playerKey={playerKey} />\r\n        )}\r\n        {lastPhase && <PhaseFinalResult game={game} playerKey={playerKey} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nMinigame.propTypes = {\r\n  game: PropTypes.object.isRequired,\r\n  createPlayer: PropTypes.func.isRequired,\r\n  playerKey: PropTypes.string.isRequired,\r\n};\r\nexport default Minigame;\r\n","import React, { Component } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport GolfIcon from \"@material-ui/icons/GolfCourse\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { fire } from \"../../base\";\r\nimport Minigame from \"../minigame/play/Minigame\";\r\n\r\nfunction fetchGame(gameId, callback) {\r\n  fire\r\n    .database()\r\n    .ref(\"games\")\r\n    .orderByChild(\"gameId\")\r\n    .equalTo(gameId)\r\n    .once(\"value\", callback);\r\n}\r\nclass Play extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      game: {},\r\n      gameId: \"\",\r\n      recentGameId: localStorage.getItem(\"RecentGameIdPlay\") || \"\",\r\n      playerKey: \"\",\r\n      recentGame: null,\r\n      isRedirected:\r\n        Date.now() - localStorage.getItem(\"spotifytoken_timestamp\") < 2000,\r\n    };\r\n    this.createPlayer = this.createPlayer.bind(this);\r\n    this.joinGame = this.joinGame.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { recentGameId, isRedirected } = this.state;\r\n    let gamePinParam = window.location.href.split(\"pin=\")[1];\r\n    if (gamePinParam) {\r\n      this.joinGame(gamePinParam);\r\n    }\r\n    if (isRedirected) {\r\n      this.joinGame(recentGameId);\r\n    }\r\n    if (recentGameId) {\r\n      // behöver spara recentgametype?\r\n      fetchGame(recentGameId, (snapshot) => {\r\n        if (snapshot.val()) {\r\n          let game;\r\n          snapshot.forEach((child) => {\r\n            game = child.val();\r\n          });\r\n          if (game.status === \"IN_PROGRESS\") {\r\n            this.setState({ recentGame: game });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChangeSelect = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleChange = (name) => (event) => {\r\n    this.setState({\r\n      [name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  joinGame(gameId) {\r\n    const { showSnackbar, toggleHeader } = this.props;\r\n    const that = this;\r\n    fetchGame(gameId, (snapshot) => {\r\n      if (snapshot.val()) {\r\n        let game;\r\n        snapshot.forEach((child) => {\r\n          game = child.val();\r\n        });\r\n        // får skapa en ny attribut, canPlayerJoin true/false om det begövs\r\n        if (game.phase === \"connection\") {\r\n          const storedPlayerKey = localStorage.getItem(\"RecentPlayerKey\");\r\n          if (\r\n            storedPlayerKey &&\r\n            game.players &&\r\n            game.players[storedPlayerKey]\r\n          ) {\r\n            that.setState({ playerKey: storedPlayerKey });\r\n          }\r\n          that.initGameListiner(game);\r\n          const snack = {\r\n            variant: \"success\",\r\n            message: \"Connected to game\",\r\n          };\r\n          showSnackbar(snack);\r\n          toggleHeader(false);\r\n        } else if (game.phase === \"setup\") {\r\n          const snack = {\r\n            variant: \"error\",\r\n            message: \"Game is not yet started\",\r\n          };\r\n          showSnackbar(snack);\r\n        } else {\r\n          const storedPlayerKey = localStorage.getItem(\"RecentPlayerKey\");\r\n          if (\r\n            storedPlayerKey &&\r\n            game.players &&\r\n            game.players[storedPlayerKey]\r\n          ) {\r\n            that.setState({ playerKey: storedPlayerKey });\r\n            localStorage.setItem(\"RecentGameIdPlay\", game.gameId);\r\n            that.initGameListiner(game);\r\n            const snack = {\r\n              variant: \"success\",\r\n              message: \"Connected to game\",\r\n            };\r\n            showSnackbar(snack);\r\n            toggleHeader(false);\r\n          } else {\r\n            const snack = {\r\n              variant: \"error\",\r\n              message: \"Game is in progress\",\r\n            };\r\n            showSnackbar(snack);\r\n          }\r\n        }\r\n      } else {\r\n        const snack = {\r\n          variant: \"info\",\r\n          message: \"No game found\",\r\n        };\r\n        showSnackbar(snack);\r\n      }\r\n    });\r\n  }\r\n\r\n  initGameListiner(_game) {\r\n    const gameRef = fire.database().ref(`games/${_game.key}`);\r\n\r\n    const that = this;\r\n    gameRef.on(\"value\", (snapshot) => {\r\n      const game = snapshot.val();\r\n      if (game) {\r\n        // kan blir problem med asynch setstate?\r\n        that.setState({\r\n          game,\r\n        });\r\n      } else {\r\n        that.setState({\r\n          game: \"\",\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  createPlayer(player) {\r\n    const { game } = this.state;\r\n    const { showSnackbar } = this.props;\r\n    const playerRef = fire\r\n      .database()\r\n      .ref(`/games/${game.key}/players`)\r\n      .push();\r\n\r\n    const newPlayer = Object.assign({ key: playerRef.key }, player);\r\n    const that = this;\r\n    playerRef.set(newPlayer, (error) => {\r\n      if (error) {\r\n        const snack = {\r\n          variant: \"error\",\r\n          message: \"Unexpected internal error\",\r\n        };\r\n        showSnackbar(snack);\r\n      } else {\r\n        that.setState({\r\n          playerKey: newPlayer.key,\r\n        });\r\n        localStorage.setItem(\"RecentPlayerKey\", newPlayer.key);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      game,\r\n      playerKey,\r\n      gameId,\r\n      recentGameId,\r\n      recentGame,\r\n      isRedirected,\r\n    } = this.state;\r\n    const { showSnackbar } = this.props;\r\n\r\n    if (!game.phase && isRedirected) {\r\n      return (\r\n        <div>\r\n          <span>Loading...</span>\r\n        </div>\r\n      );\r\n    }\r\n    if (!game.phase) {\r\n      return (\r\n        <div className=\"page-container play-page\">\r\n          <div>\r\n            <FormControl>\r\n              <TextField\r\n                label=\"Game PIN\"\r\n                name=\"Game ID\"\r\n                value={gameId}\r\n                margin=\"normal\"\r\n                onChange={this.handleChange(\"gameId\")}\r\n              />\r\n            </FormControl>\r\n            <Button onClick={() => this.joinGame(gameId)} variant=\"contained\">\r\n              Join\r\n            </Button>\r\n          </div>\r\n          {recentGame && (\r\n            <div>\r\n              <List>\r\n                <ListItem>\r\n                  <ListItemAvatar>\r\n                    <Avatar>\r\n                      <GolfIcon />\r\n                    </Avatar>\r\n                  </ListItemAvatar>\r\n                  <ListItemText\r\n                    primary={recentGame.title}\r\n                    secondary={recentGame.gameId}\r\n                  />\r\n                  <ListItemSecondaryAction>\r\n                    <IconButton\r\n                      aria-label=\"reconnect\"\r\n                      onClick={() => this.joinGame(recentGameId)}\r\n                    >\r\n                      <Typography>reconnect</Typography>\r\n                    </IconButton>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n              </List>\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"page-container play-page\">\r\n        <Minigame\r\n          game={game}\r\n          createPlayer={this.createPlayer}\r\n          playerKey={playerKey}\r\n          showSnackbar={showSnackbar}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nPlay.propTypes = {\r\n  showSnackbar: PropTypes.func.isRequired,\r\n  toggleHeader: PropTypes.func.isRequired,\r\n};\r\nexport default Play;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport green from \"@material-ui/core/colors/green\";\r\nimport amber from \"@material-ui/core/colors/amber\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport WarningIcon from \"@material-ui/icons/Warning\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst variantIcon = {\r\n  success: CheckCircleIcon,\r\n  warning: WarningIcon,\r\n  error: ErrorIcon,\r\n  info: InfoIcon,\r\n};\r\n\r\nconst styles1 = (theme) => ({\r\n  success: {\r\n    backgroundColor: green[600],\r\n  },\r\n  error: {\r\n    backgroundColor: theme.palette.error.dark,\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  warning: {\r\n    backgroundColor: amber[700],\r\n  },\r\n  icon: {\r\n    fontSize: 20,\r\n  },\r\n  iconVariant: {\r\n    opacity: 0.9,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  message: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nfunction MySnackbarContent(props) {\r\n  const { classes, message, onClose, variant, ...other } = props;\r\n  const Icon = variantIcon[variant];\r\n\r\n  return (\r\n    <SnackbarContent\r\n      className={classes[variant]}\r\n      aria-describedby=\"client-snackbar\"\r\n      message={\r\n        <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\r\n          {message}\r\n        </span>\r\n      }\r\n      action={[\r\n        <IconButton\r\n          key=\"close\"\r\n          aria-label=\"Close\"\r\n          color=\"inherit\"\r\n          className={classes.close}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon className={classes.icon} />\r\n        </IconButton>,\r\n      ]}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nMySnackbarContent.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired,\r\n};\r\n\r\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\r\n\r\nclass CustomizedSnackbars extends React.Component {\r\n  handleClose = (reason) => {\r\n    const { hideSnackbar } = this.props;\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    hideSnackbar();\r\n  };\r\n\r\n  render() {\r\n    const { snack } = this.props;\r\n    return (\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={snack.open}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleClose}\r\n        >\r\n          <MySnackbarContentWrapper\r\n            onClose={this.handleClose}\r\n            variant={snack.variant}\r\n            message={snack.message}\r\n          />\r\n        </Snackbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nCustomizedSnackbars.propTypes = {\r\n  snack: PropTypes.object,\r\n  hideSnackbar: PropTypes.func.isRequired,\r\n};\r\nexport default CustomizedSnackbars;\r\n","import React, { Component } from 'react';\r\nimport './App.scss';\r\nimport Header from './components/common/Header';\r\nimport Play from './components/pages/Play';\r\nimport CustomizedSnackbars from './components/common/CustomizedSnackbars';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      snack: '',\r\n      showHeader: true,\r\n    };\r\n    const hash = window.location.hash\r\n      .substring(1)\r\n      .split('&')\r\n      .reduce((initial, item) => {\r\n        if (item) {\r\n          const parts = item.split('=');\r\n          initial[parts[0]] = decodeURIComponent(parts[1]);\r\n        }\r\n        return initial;\r\n      }, {});\r\n    window.location.hash = '';\r\n    if (hash.access_token) {\r\n      localStorage.setItem('spotifytoken', hash.access_token);\r\n      localStorage.setItem('spotifytoken_timestamp', Date.now());\r\n    }\r\n    this.showSnackbar = this.showSnackbar.bind(this);\r\n    this.hideSnackbar = this.hideSnackbar.bind(this);\r\n    this.toggleHeader = this.toggleHeader.bind(this);\r\n  }\r\n\r\n  hideSnackbar() {\r\n    const snack = this.state.snack;\r\n    snack.open = false;\r\n    this.setState({\r\n      snack,\r\n    });\r\n  }\r\n\r\n  showSnackbar(snack) {\r\n    snack.open = true;\r\n    this.setState({\r\n      snack,\r\n    });\r\n  }\r\n\r\n  toggleHeader(value) {\r\n    this.setState({ showHeader: value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {this.state.showHeader && <Header />}\r\n        <div id=\"content\">\r\n\r\n          <Play\r\n            showSnackbar={this.showSnackbar}\r\n            toggleHeader={this.toggleHeader}\r\n          />\r\n        </div>\r\n        {this.state.snack && (\r\n        <CustomizedSnackbars\r\n          snack={this.state.snack}\r\n          hideSnackbar={this.hideSnackbar}\r\n        />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}